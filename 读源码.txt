1
看什么学什么
整体项目是生成项目layout的一个kit工具，
是提供了日志，配置中心，可观测能力，注册中心等等各种微服务组件的接口，而不是具体实现

____
单独看看配置的接口
1
实现基于文件和基于环境变量的配置2种方式
2
接口定义上支持热更新
3
原理上有一层key合并
大概就是配置文件可以是多个文件，每个文件被解析为一个map，kratos会最终合并为一个map
然后赋值到conf.go文件里
4
https://go-kratos.dev/docs/component/config
这里介绍了基于file和基于env的用法
kratos里面肯定是原理，这里使用
5





2
contrib是具体的日志log，配置中心，可观测，注册中心等等的具体实现

3
aegis是单独的仓库
提供了bbr限流器，断路器，的具体实现
4
examples代码例子TODO一个个看看



——————————————————————————————————————
1
怎么new一个项目
new的时候怎么依赖的git？----->done
2
新项目怎么使用kratos的log ，bbr ，断路器等等插件的功能？---->done

3
明天就要看http grpc的封装了
————————————————————————————————-
开拓眼界：

1
https://www.conventionalcommits.org/zh-hans/v1.0.0/#%e7%ba%a6%e5%ae%9a%e5%bc%8f%e6%8f%90%e4%ba%a4%e8%a7%84%e8%8c%83
知道了还有这种提交规范的文档，还是多语言版本
2
https://docusaurus.io/zh-CN/
还知道了一个做文档类网站的最新的好工具
——————————————————————————————————————————————
kratos项目回答了我一直的一个问题
做一套微服务需要什么东西
1
kit layout工具
2
元信息传递
3
负载均衡
4
服务发现注册
5
日志
6
监控
可观测性
7
配置中心
8
http grpc的使用
就是封装一层
9
很多很多中间件给http grpc使用
断路器，限流器，trace，鉴权，日志，检验，recovery
10


至于其他的对象存储，paas，kv存储，mysql，redis，tidb，
es，kafka，不能算是微服务本身，是不管微不微的服务用到的工具

至于APIGW，服务树tree，压测，混沌，flink实时，多活，
更是算丰富扩展一类的支持工具，大公司必须做，小公司不做就算了
——————————————————————————————————————————————